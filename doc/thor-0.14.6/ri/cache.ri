{:modules["	Thor"Thor::Actions" Thor::Actions::ClassMethods"Thor::Base"Thor::Base::ClassMethods"Thor::DynamicTask"Thor::Error"Thor::Group"Thor::HiddenTask"Thor::Invocation"#Thor::Invocation::ClassMethods"Thor::InvocationError"$Thor::MalformattedArgumentError"Thor::RakeCompat"'Thor::RequiredArgumentMissingError"Thor::Shell"Thor::Shell::Basic"Thor::Shell::Color"Thor::Shell::HTML"Thor::Task"Thor::UndefinedTaskError"Thor::UnknownArgumentError"Thor::Util:encoding0:attributes{	"Thor::Shell::Basic["attr_accessor base"attr_accessor padding"Thor::Base::ClassMethods["attr_accessor debugging"Thor::Actions["attr_accessor behavior"Thor::Base["attr_accessor options:class_methods{"Thor::Util["camel_case"find_by_namespace"%find_class_and_task_by_namespace"globs_for"load_thorfile"namespace_from_thor_class"namespaces_in_content"ruby_command"snake_case"thor_classes_in"thor_root"thor_root_glob"user_home"	Thor["banner"check_unknown_options!"default_task"	desc"	help"long_desc"map"method_option"method_options"printable_tasks"register"subcommand"subcommand_help"subcommands"task_help"Thor::DynamicTask["new"Thor::Shell["new"Thor::RakeCompat["included"rake_classes@&["new"Thor::Group["banner"	desc"	help"invoke"invoke_from_option"printable_tasks"remove_invocation@)[
"new"
shell"shell="subclass_files"subclasses"Thor::Task["new:instance_methods{" Thor::Actions::ClassMethods[	"add_runtime_options!"source_paths"source_paths_for_search"source_root"Thor::Shell::Color["set_color@["ask"	base"dynamic_width"dynamic_width_stty"dynamic_width_tput"
error"file_collision"	mute"
mute?"no?"padding"padding="print_table"print_wrapped"say"say_status"terminal_width"truncate"
unix?"	yes?@<["	help@#["all_tasks"argument"arguments"basename"check_unknown_options!"class_option"class_options"debugging"exit_on_failure?"from_superclass"
group"inherited"method_added"namespace"no_tasks"print_options"public_task"remove_argument"remove_class_option"remove_task"
start"
tasks@M["run@P["
shell"shell="with_padding"Thor::Shell::HTML["ask"set_color"Thor::Invocation["invoke"invoke_with_padding@&[&"add_file"add_link"append_file"append_to_file"
apply"behavior"
chmod"copy_file"create_file"create_link"destination_root"destination_root="directory"empty_directory"find_in_source_paths"get"gsub_file"in_root"inject_into_class"inject_into_file"insert_into_file"inside"link_file"prepend_file"prepend_to_file"*relative_to_original_destination_root"remove_dir"remove_file"run"run_ruby_script"source_paths"template"	thor"Thor::HiddenTask["hidden?@)["options@h["formatted_usage"handle_argument_error?"handle_no_method_error?"hidden?"not_debugging?"required_options"run:ancestors{@r["
Basic@["Object@<["Object@
"Thor::UndefinedTaskError[@"Thor::InvocationError[@"Thor::UnknownArgumentError[@@M[@@¤[@"$Thor::MalformattedArgumentError[@"Thor::Error["StandardError@Y["Object@
@Î[@"'Thor::RequiredArgumentMissingError[@@h["IStruct.new(:name, :description, :long_description, :usage, :options)